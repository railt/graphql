//
// TypeDefinitions
//
%include definitions/argument
%include definitions/directive
%include definitions/enum
%include definitions/field
%include definitions/input
%include definitions/interface
%include definitions/object
%include definitions/scalar
%include definitions/schema
%include definitions/union


Definition
    : DirectiveDefinition()
    | SchemaDefinition()
    | EnumDefinition()
    | InputDefinition()
    | InterfaceDefinition()
    | ObjectDefinition()
    | ScalarDefinition()
    | UnionDefinition()
    ;

Extension
    : EnumExtension()
    | InputExtension()
    | InterfaceExtension()
    | ObjectExtension()
    | ScalarExtension()
    | SchemaExtension()
    | UnionExtension()
    ;


//
// Type definition header
//

#TypeDefinition
  : TypeName()
    __genericDefinitionArguments()?
  ;

__genericDefinitionArguments
  : ::T_ANGLE_OPEN::
      GenericDefinitionArgument()*
    ::T_ANGLE_CLOSE::
  ;

#GenericDefinitionArgument
  : GenericDefinitionArgumentName() ::T_COLON:: GenericDefinitionArgumentValue()
    GenericDefinitionArgumentDefaultValue()?
    ::T_COMMA::?
  ;

#GenericDefinitionArgumentName
  : ConstantName()
  ;

#GenericDefinitionArgumentValue
  : TypeName()
  ;

#GenericDefinitionArgumentDefaultValue
  : ::T_EQUAL:: TypeInvocation()
  ;
