

/**
 * TypeHint
 */

TypeHint
  : NonNullType()
  | ListType()
  | NamedType()
  ;


ListType -> {
    return Ast\Type\ListTypeNode::create($children);
}
  : ::T_BRACKET_OPEN:: TypeHint() ::T_BRACKET_CLOSE::
  ;


NonNullType -> {
    return Ast\Type\NonNullTypeNode::create($children);
}
  : (ListType() | NamedType()) ::T_NON_NULL::
  ;


NamedType -> {
    return Ast\Type\NamedTypeNode::create($children);
}
  : Identifier() NamedTypeGenericArguments()?
  ;

NamedTypeGenericArguments
  : ::T_ANGLE_OPEN::
      NamedType() (::T_COMMA::? NamedType())*
    ::T_ANGLE_CLOSE::
  ;

NamedDirective -> {
    return Ast\Type\NamedDirectiveNode::create($children);
}
  : ::T_DIRECTIVE_AT:: Identifier()
  ;

