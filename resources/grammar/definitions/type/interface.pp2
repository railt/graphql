

/**
 * --------------------------------------------------------------------------
 *  GraphQL SDL Interfaces
 * --------------------------------------------------------------------------
 *
 * GraphQL interfaces represent a list of named fields and their arguments.
 * GraphQL objects can then implement these interfaces which requires that
 * the object type will define all fields defined by those interfaces.
 *
 * @see https://facebook.github.io/graphql/June2018/#sec-Interfaces
 *
 */

InterfaceTypeDefinition -> {
    return Ast\Definition\Type\InterfaceTypeDefinitionNode::create($children);
}
  : Description()?
    InterfaceTypeDefinitionExceptDescription()
  ;

InterfaceTypeDefinitionExceptDescription
  : InterfaceTypeDefinitionHead()
    InterfaceTypeDefinitionBody()?
  ;

InterfaceTypeDefinitionHead
  : ::T_INTERFACE:: Identifier()
    ImplementsInterfaces()?
    Directive()*
  ;

InterfaceTypeDefinitionBody
  : ::T_BRACE_OPEN::
      FieldDefinitions()?
    ::T_BRACE_CLOSE::
  ;

//
// Implements
//

ImplementsInterfaces -> {
    return Ast\Definition\Type\ImplementedInterfaceNode::create($children);
}
  : ::T_IMPLEMENTS::
    ImplementsInterfacesDelimiter()? NamedType()
    ( ImplementsInterfacesDelimiter() NamedType() )*
  ;

ImplementsInterfacesDelimiter
  : ::T_COMMA::
  | ::T_AND::
  ;
