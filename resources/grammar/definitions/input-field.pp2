/**
 * --------------------------------------------------------------------------
 *  GraphQL SDL Input Field
 * --------------------------------------------------------------------------
 *
 * Fields are conceptually functions which return values, and occasionally
 * accept arguments which alter their behavior. These arguments often map
 * directly to function arguments within a GraphQL serverâ€™s implementation.
 *
 * @see https://graphql.github.io/graphql-spec/June2018/#sec-Field-Arguments
 */


InputFieldDefinitions -> {
    return new \Railt\SDL\Ast\Generic\InputFieldDefinitionCollection($children);
}
  : InputFieldDefinition()+
  ;


InputFieldDefinition -> {
    $value = new \Railt\SDL\Ast\Definition\InputFieldDefinitionNode(
        $children[1],
        $children[2]
    );

    foreach ($children as $child) {
        switch (true) {
            case $child instanceof \Railt\SDL\Ast\Description:
                $value->description = $child->value;
                break;

            case $child instanceof \Railt\SDL\Ast\Generic\DirectiveCollection:
                $value->directives = $child;
                break;

            case $child instanceof \Railt\SDL\Ast\Value\ValueNode:
                $value->defaultValue = $child;
                break;
        }
    }

    return $value;
}
  : Description()
    Identifier() ::T_COLON:: TypeHint()
    (::T_EQUAL:: Value())?
    Directives()? ::T_COMMA::?
  ;
