<?php

/**
 * This file is part of Railt package and has been autogenerated.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @see https://github.com/railt/sdl/blob/2.0.x-dev/LICENSE.md
 * @see https://github.com/phplrt/parser/blob/2.2.3/LICENSE.md
 * @see https://github.com/phplrt/lexer/blob/2.2.3/LICENSE.md
 */

declare(strict_types=1);

namespace Railt\SDL;

use Phplrt\Source\File;
use Railt\SDL\Ast\Node;
use Railt\SDL\Ast\Location;
use Railt\SDL\Parser\Lexer;
use Railt\SDL\Parser\Builder;
use Phplrt\Parser\Rule\RuleInterface;
use Phplrt\Parser\Parser as BaseParser;
use Phplrt\Parser\Buffer\BufferInterface;
use Phplrt\Contracts\Source\ReadableInterface;
use Railt\SDL\Exception\SyntaxErrorException;
use Phplrt\Parser\Exception\ParserRuntimeException;
use Phplrt\Parser\Rule\{Lexeme, Optional, Repetition, Alternation, Concatenation};

/**
 * This class is generated by railt/parser, specifically
 * by Railt\SDL\Parser\Generator\Generator.
 */
final class Parser extends BaseParser
{
    /**
     * @var string
     */
    private const ROOT_PRODUCTION = 'Document';

    /**
     * Parser constructor.
     */
    public function __construct()
    {
        parent::__construct(new Lexer(), $this->grammar(), [
            parent::CONFIG_AST_BUILDER  => new Builder(),
            parent::CONFIG_INITIAL_RULE => self::ROOT_PRODUCTION,
        ]);
    }

    /**
     * @return array|RuleInterface[]
     */
    private function grammar(): array
    {
        return [
            0 => new Lexeme(
                'T_TRUE',
                true,
            ),
            1 => new Lexeme(
                'T_FALSE',
                true,
            ),
            2 => new Lexeme(
                'T_NULL',
                true,
            ),
            3 => new Lexeme(
                'T_TYPE',
                true,
            ),
            4 => new Lexeme(
                'T_ENUM',
                true,
            ),
            5 => new Lexeme(
                'T_UNION',
                true,
            ),
            6 => new Lexeme(
                'T_INTERFACE',
                true,
            ),
            7 => new Lexeme(
                'T_SCHEMA',
                true,
            ),
            8 => new Lexeme(
                'T_SCALAR',
                true,
            ),
            9 => new Lexeme(
                'T_DIRECTIVE',
                true,
            ),
            10 => new Lexeme(
                'T_INPUT',
                true,
            ),
            11 => new Lexeme(
                'T_EXTEND',
                true,
            ),
            12 => new Lexeme(
                'T_EXTENDS',
                true,
            ),
            13 => new Lexeme(
                'T_IMPLEMENTS',
                true,
            ),
            14 => new Lexeme(
                'T_ON',
                true,
            ),
            15 => new Lexeme(
                'T_REPEATABLE',
                true,
            ),
            16 => new Lexeme(
                'T_QUERY',
                true,
            ),
            17 => new Lexeme(
                'T_MUTATION',
                true,
            ),
            18 => new Lexeme(
                'T_SUBSCRIPTION',
                true,
            ),
            19 => new Lexeme(
                'T_NAME',
                true,
            ),
            20 => new Alternation(
                [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
            ),
            21 => new Concatenation(
                [20],
            ),
            22 => new Concatenation(
                [28, 29],
            ),
            23 => new Concatenation(
                [26, 25, 27],
            ),
            24 => new Concatenation(
                [21],
            ),
            25 => new Alternation(
                [22, 23, 24],
            ),
            26 => new Lexeme(
                'T_BRACKET_OPEN',
                false,
            ),
            27 => new Lexeme(
                'T_BRACKET_CLOSE',
                false,
            ),
            28 => new Alternation(
                [23, 24],
            ),
            29 => new Lexeme(
                'T_NON_NULL',
                false,
            ),
            30 => new Lexeme(
                'T_FALSE',
                true,
            ),
            31 => new Lexeme(
                'T_TRUE',
                true,
            ),
            32 => new Alternation(
                [30, 31],
            ),
            33 => new Concatenation(
                [20],
            ),
            34 => new Repetition(
                41,
                0,
                INF,
            ),
            35 => new Lexeme(
                'T_BRACKET_OPEN',
                false,
            ),
            36 => new Lexeme(
                'T_BRACKET_CLOSE',
                false,
            ),
            37 => new Concatenation(
                [35, 34, 36],
            ),
            38 => new Alternation(
                [59, 60, 37, 50],
            ),
            39 => new Lexeme(
                'T_COMMA',
                false,
            ),
            40 => new Optional(
                39,
            ),
            41 => new Concatenation(
                [38, 40],
            ),
            42 => new Lexeme(
                'T_NULL',
                false,
            ),
            43 => new Lexeme(
                'T_INT',
                true,
            ),
            44 => new Lexeme(
                'T_FLOAT',
                true,
            ),
            45 => new Lexeme(
                'T_FLOAT_EXP',
                true,
            ),
            46 => new Alternation(
                [44, 45],
            ),
            47 => new Repetition(
                51,
                0,
                INF,
            ),
            48 => new Lexeme(
                'T_BRACE_OPEN',
                false,
            ),
            49 => new Lexeme(
                'T_BRACE_CLOSE',
                false,
            ),
            50 => new Concatenation(
                [48, 47, 49],
            ),
            51 => new Concatenation(
                [20, 53, 38, 54],
            ),
            52 => new Lexeme(
                'T_COMMA',
                false,
            ),
            53 => new Lexeme(
                'T_COLON',
                false,
            ),
            54 => new Optional(
                52,
            ),
            55 => new Lexeme(
                'T_BLOCK_STRING',
                true,
            ),
            56 => new Lexeme(
                'T_STRING',
                true,
            ),
            57 => new Alternation(
                [55, 56],
            ),
            58 => new Lexeme(
                'T_VARIABLE',
                true,
            ),
            59 => new Concatenation(
                [58],
            ),
            60 => new Alternation(
                [43, 46, 57, 32, 42, 33],
            ),
            61 => new Optional(
                57,
            ),
            62 => new Concatenation(
                [64, 66],
            ),
            63 => new Concatenation(
                [61, 62],
            ),
            64 => new Concatenation(
                [68, 69],
            ),
            65 => new Concatenation(
                [71, 72, 73],
            ),
            66 => new Optional(
                65,
            ),
            67 => new Repetition(
                207,
                1,
                INF,
            ),
            68 => new Lexeme(
                'T_SCHEMA',
                false,
            ),
            69 => new Optional(
                67,
            ),
            70 => new Repetition(
                77,
                1,
                INF,
            ),
            71 => new Lexeme(
                'T_BRACE_OPEN',
                false,
            ),
            72 => new Optional(
                70,
            ),
            73 => new Lexeme(
                'T_BRACE_CLOSE',
                false,
            ),
            74 => new Concatenation(
                [78, 79, 24],
            ),
            75 => new Lexeme(
                'T_COMMA',
                false,
            ),
            76 => new Optional(
                75,
            ),
            77 => new Concatenation(
                [74, 76],
            ),
            78 => new Alternation(
                [80, 81, 82],
            ),
            79 => new Lexeme(
                'T_COLON',
                false,
            ),
            80 => new Lexeme(
                'T_QUERY',
                true,
            ),
            81 => new Lexeme(
                'T_MUTATION',
                true,
            ),
            82 => new Lexeme(
                'T_SUBSCRIPTION',
                true,
            ),
            83 => new Concatenation(
                [88, 89, 21, 90, 91],
            ),
            84 => new Concatenation(
                [97, 96],
            ),
            85 => new Concatenation(
                [61, 83, 84],
            ),
            86 => new Concatenation(
                [93, 94, 95],
            ),
            87 => new Lexeme(
                'T_REPEATABLE',
                true,
            ),
            88 => new Lexeme(
                'T_DIRECTIVE',
                false,
            ),
            89 => new Lexeme(
                'T_DIRECTIVE_AT',
                false,
            ),
            90 => new Optional(
                86,
            ),
            91 => new Optional(
                87,
            ),
            92 => new Repetition(
                115,
                1,
                INF,
            ),
            93 => new Lexeme(
                'T_PARENTHESIS_OPEN',
                false,
            ),
            94 => new Optional(
                92,
            ),
            95 => new Lexeme(
                'T_PARENTHESIS_CLOSE',
                false,
            ),
            96 => new Concatenation(
                [102, 99, 103],
            ),
            97 => new Lexeme(
                'T_ON',
                false,
            ),
            98 => new Lexeme(
                'T_OR',
                false,
            ),
            99 => new Concatenation(
                [20],
            ),
            100 => new Lexeme(
                'T_OR',
                false,
            ),
            101 => new Concatenation(
                [100, 99],
            ),
            102 => new Optional(
                98,
            ),
            103 => new Repetition(
                101,
                0,
                INF,
            ),
            104 => new Concatenation(
                [61, 20, 108, 109, 25, 110, 111],
            ),
            105 => new Repetition(
                104,
                1,
                INF,
            ),
            106 => new Concatenation(
                [112, 113, 114],
            ),
            107 => new Lexeme(
                'T_COMMA',
                false,
            ),
            108 => new Optional(
                106,
            ),
            109 => new Lexeme(
                'T_COLON',
                false,
            ),
            110 => new Optional(
                67,
            ),
            111 => new Optional(
                107,
            ),
            112 => new Lexeme(
                'T_PARENTHESIS_OPEN',
                false,
            ),
            113 => new Optional(
                92,
            ),
            114 => new Lexeme(
                'T_PARENTHESIS_CLOSE',
                false,
            ),
            115 => new Concatenation(
                [61, 20, 119, 25, 120, 121, 122],
            ),
            116 => new Lexeme(
                'T_EQUAL',
                false,
            ),
            117 => new Concatenation(
                [116, 38],
            ),
            118 => new Lexeme(
                'T_COMMA',
                false,
            ),
            119 => new Lexeme(
                'T_COLON',
                false,
            ),
            120 => new Optional(
                117,
            ),
            121 => new Optional(
                67,
            ),
            122 => new Optional(
                118,
            ),
            123 => new Concatenation(
                [61, 20, 128, 25, 129, 130, 131],
            ),
            124 => new Repetition(
                123,
                1,
                INF,
            ),
            125 => new Lexeme(
                'T_EQUAL',
                false,
            ),
            126 => new Concatenation(
                [125, 38],
            ),
            127 => new Lexeme(
                'T_COMMA',
                false,
            ),
            128 => new Lexeme(
                'T_COLON',
                false,
            ),
            129 => new Optional(
                126,
            ),
            130 => new Optional(
                67,
            ),
            131 => new Optional(
                127,
            ),
            132 => new Concatenation(
                [61, 20, 135, 136],
            ),
            133 => new Repetition(
                132,
                1,
                INF,
            ),
            134 => new Lexeme(
                'T_COMMA',
                false,
            ),
            135 => new Optional(
                67,
            ),
            136 => new Optional(
                134,
            ),
            137 => new Concatenation(
                [139, 141],
            ),
            138 => new Concatenation(
                [61, 137],
            ),
            139 => new Concatenation(
                [142, 21, 143],
            ),
            140 => new Concatenation(
                [144, 145, 146],
            ),
            141 => new Optional(
                140,
            ),
            142 => new Lexeme(
                'T_ENUM',
                false,
            ),
            143 => new Optional(
                67,
            ),
            144 => new Lexeme(
                'T_BRACE_OPEN',
                false,
            ),
            145 => new Optional(
                133,
            ),
            146 => new Lexeme(
                'T_BRACE_CLOSE',
                false,
            ),
            147 => new Concatenation(
                [149, 151],
            ),
            148 => new Concatenation(
                [61, 147],
            ),
            149 => new Concatenation(
                [152, 21, 153],
            ),
            150 => new Concatenation(
                [154, 155, 156],
            ),
            151 => new Optional(
                150,
            ),
            152 => new Lexeme(
                'T_INPUT',
                false,
            ),
            153 => new Optional(
                67,
            ),
            154 => new Lexeme(
                'T_BRACE_OPEN',
                false,
            ),
            155 => new Optional(
                124,
            ),
            156 => new Lexeme(
                'T_BRACE_CLOSE',
                false,
            ),
            157 => new Concatenation(
                [159, 161],
            ),
            158 => new Concatenation(
                [61, 157],
            ),
            159 => new Concatenation(
                [163, 21, 164, 165],
            ),
            160 => new Concatenation(
                [166, 167, 168],
            ),
            161 => new Optional(
                160,
            ),
            162 => new Concatenation(
                [171, 172, 24, 173],
            ),
            163 => new Lexeme(
                'T_INTERFACE',
                false,
            ),
            164 => new Optional(
                162,
            ),
            165 => new Optional(
                67,
            ),
            166 => new Lexeme(
                'T_BRACE_OPEN',
                false,
            ),
            167 => new Optional(
                105,
            ),
            168 => new Lexeme(
                'T_BRACE_CLOSE',
                false,
            ),
            169 => new Alternation(
                [174, 175],
            ),
            170 => new Concatenation(
                [169, 24],
            ),
            171 => new Lexeme(
                'T_IMPLEMENTS',
                false,
            ),
            172 => new Optional(
                169,
            ),
            173 => new Repetition(
                170,
                0,
                INF,
            ),
            174 => new Lexeme(
                'T_COMMA',
                false,
            ),
            175 => new Lexeme(
                'T_AND',
                false,
            ),
            176 => new Concatenation(
                [178, 180],
            ),
            177 => new Concatenation(
                [61, 176],
            ),
            178 => new Concatenation(
                [181, 21, 182, 183],
            ),
            179 => new Concatenation(
                [184, 185, 186],
            ),
            180 => new Optional(
                179,
            ),
            181 => new Lexeme(
                'T_TYPE',
                false,
            ),
            182 => new Optional(
                162,
            ),
            183 => new Optional(
                67,
            ),
            184 => new Lexeme(
                'T_BRACE_OPEN',
                false,
            ),
            185 => new Optional(
                105,
            ),
            186 => new Lexeme(
                'T_BRACE_CLOSE',
                false,
            ),
            187 => new Concatenation(
                [189],
            ),
            188 => new Concatenation(
                [61, 187],
            ),
            189 => new Concatenation(
                [190, 21, 191],
            ),
            190 => new Lexeme(
                'T_SCALAR',
                false,
            ),
            191 => new Optional(
                67,
            ),
            192 => new Concatenation(
                [194, 196],
            ),
            193 => new Concatenation(
                [61, 192],
            ),
            194 => new Concatenation(
                [197, 21, 198],
            ),
            195 => new Concatenation(
                [200, 201],
            ),
            196 => new Optional(
                195,
            ),
            197 => new Lexeme(
                'T_UNION',
                false,
            ),
            198 => new Optional(
                67,
            ),
            199 => new Concatenation(
                [205, 24, 206],
            ),
            200 => new Lexeme(
                'T_EQUAL',
                false,
            ),
            201 => new Optional(
                199,
            ),
            202 => new Lexeme(
                'T_OR',
                false,
            ),
            203 => new Lexeme(
                'T_OR',
                false,
            ),
            204 => new Concatenation(
                [203, 24],
            ),
            205 => new Optional(
                202,
            ),
            206 => new Repetition(
                204,
                0,
                INF,
            ),
            207 => new Concatenation(
                [209, 21, 210],
            ),
            208 => new Concatenation(
                [215, 216, 217],
            ),
            209 => new Lexeme(
                'T_DIRECTIVE_AT',
                false,
            ),
            210 => new Optional(
                208,
            ),
            211 => new Concatenation(
                [20, 218, 38],
            ),
            212 => new Lexeme(
                'T_COMMA',
                false,
            ),
            213 => new Optional(
                212,
            ),
            214 => new Concatenation(
                [211, 213],
            ),
            215 => new Lexeme(
                'T_PARENTHESIS_OPEN',
                false,
            ),
            216 => new Repetition(
                214,
                0,
                INF,
            ),
            217 => new Lexeme(
                'T_PARENTHESIS_CLOSE',
                false,
            ),
            218 => new Lexeme(
                'T_COLON',
                false,
            ),
            219 => new Lexeme(
                'T_EXTEND',
                false,
            ),
            220 => new Concatenation(
                [61, 219, 137],
            ),
            221 => new Lexeme(
                'T_EXTEND',
                false,
            ),
            222 => new Concatenation(
                [61, 221, 147],
            ),
            223 => new Lexeme(
                'T_EXTEND',
                false,
            ),
            224 => new Concatenation(
                [61, 223, 157],
            ),
            225 => new Lexeme(
                'T_EXTEND',
                false,
            ),
            226 => new Concatenation(
                [61, 225, 176],
            ),
            227 => new Lexeme(
                'T_EXTEND',
                false,
            ),
            228 => new Concatenation(
                [61, 227, 187],
            ),
            229 => new Lexeme(
                'T_EXTEND',
                false,
            ),
            230 => new Concatenation(
                [61, 229, 62],
            ),
            231 => new Lexeme(
                'T_EXTEND',
                false,
            ),
            232 => new Concatenation(
                [61, 231, 192],
            ),
            'Document' => new Repetition(
                233,
                0,
                INF,
            ),
            233 => new Alternation(
                [234, 235],
            ),
            234 => new Alternation(
                [63, 85, 236],
            ),
            236 => new Alternation(
                [188, 177, 158, 193, 138, 148],
            ),
            235 => new Alternation(
                [230, 237],
            ),
            237 => new Alternation(
                [228, 226, 224, 232, 220, 222],
            ),
        ];
    }

    /**
     * {@inheritDoc}
     */
    protected function next(ReadableInterface $source, BufferInterface $buffer, $state)
    {
        $from = $buffer->current()->getOffset();

        $result = parent::next($source, $buffer, $state);

        if ($result instanceof Node) {
            $result->loc = new Location($source, $from, $buffer->current()->getOffset());
        }

        return $result;
    }

    /**
     * {@inheritDoc}
     */
    public function parse($source): iterable
    {
        $source = File::new($source);

        try {
            return parent::parse($source);
        } catch (ParserRuntimeException $e) {
            throw new SyntaxErrorException($e->getMessage(), $source, $e->getToken()->getOffset());
        }
    }
}
