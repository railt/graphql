<?php
/**
 * This file is part of Parser package.
 * 
 * For the full copyright and license information, please view the
 * LICENSE file that was distributed with this source code.
 */
declare(strict_types=1);

namespace Railt\SDL\Parser;

use Railt\Compiler\Parser\Runtime as SchemaParserRuntime;
use Railt\Compiler\Lexer\NativeStateful as SchemaParserLexer;

/**
 * This class has been auto-generated by the Railt\Compiler\Generator
 */
final class SchemaParser extends SchemaParserRuntime
{
    /**#@+
     * List of SchemaParser::class tokens defined as public constants
     */
    public const T_AND = 'T_AND';
    public const T_OR = 'T_OR';
    public const T_PARENTHESIS_OPEN = 'T_PARENTHESIS_OPEN';
    public const T_PARENTHESIS_CLOSE = 'T_PARENTHESIS_CLOSE';
    public const T_BRACKET_OPEN = 'T_BRACKET_OPEN';
    public const T_BRACKET_CLOSE = 'T_BRACKET_CLOSE';
    public const T_BRACE_OPEN = 'T_BRACE_OPEN';
    public const T_BRACE_CLOSE = 'T_BRACE_CLOSE';
    public const T_NON_NULL = 'T_NON_NULL';
    public const T_THREE_DOTS = 'T_THREE_DOTS';
    public const T_COLON = 'T_COLON';
    public const T_EQUAL = 'T_EQUAL';
    public const T_DIRECTIVE_AT = 'T_DIRECTIVE_AT';
    public const T_NUMBER = 'T_NUMBER';
    public const T_TRUE = 'T_TRUE';
    public const T_FALSE = 'T_FALSE';
    public const T_NULL = 'T_NULL';
    public const T_BLOCK_STRING = 'T_BLOCK_STRING';
    public const T_STRING = 'T_STRING';
    public const T_NAMESPACE = 'T_NAMESPACE';
    public const T_NAMESPACE_SEPARATOR = 'T_NAMESPACE_SEPARATOR';
    public const T_EXTENDS = 'T_EXTENDS';
    public const T_IMPLEMENTS = 'T_IMPLEMENTS';
    public const T_ON = 'T_ON';
    public const T_TYPE = 'T_TYPE';
    public const T_ENUM = 'T_ENUM';
    public const T_UNION = 'T_UNION';
    public const T_INPUT_UNION = 'T_INPUT_UNION';
    public const T_INTERFACE = 'T_INTERFACE';
    public const T_SCHEMA = 'T_SCHEMA';
    public const T_SCALAR = 'T_SCALAR';
    public const T_DIRECTIVE = 'T_DIRECTIVE';
    public const T_INPUT = 'T_INPUT';
    public const T_EXTEND = 'T_EXTEND';
    public const T_FRAGMENT = 'T_FRAGMENT';
    public const T_VARIABLE = 'T_VARIABLE';
    public const T_NAME = 'T_NAME';
    public const T_WHITESPACE = 'T_WHITESPACE';
    public const T_COMMENT = 'T_COMMENT';
    public const T_COMMA = 'T_COMMA';
    /**#@-*/

    public function __construct()
    {
        parent::__construct(new SchemaParserLexer('/\\G(?P<T_AND>&)|(?P<T_OR>\\|)|(?P<T_PARENTHESIS_OPEN>\\()|(?P<T_PARENTHESIS_CLOSE>\\))|(?P<T_BRACKET_OPEN>\\[)|(?P<T_BRACKET_CLOSE>\\])|(?P<T_BRACE_OPEN>{)|(?P<T_BRACE_CLOSE>})|(?P<T_NON_NULL>!)|(?P<T_THREE_DOTS>\\.\\.\\.)|(?P<T_COLON>:)|(?P<T_EQUAL>=)|(?P<T_DIRECTIVE_AT>@)|(?P<T_NUMBER>\\-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][\\+\\-]?[0-9]+)?\\b)|(?P<T_TRUE>true\\b)|(?P<T_FALSE>false\\b)|(?P<T_NULL>null\\b)|(?P<T_BLOCK_STRING>"""(?:\\\\"""|(?!""").|\\s)+""")|(?P<T_STRING>"[^"\\\\]+(\\\\.[^"\\\\]*)*")|(?P<T_NAMESPACE>namespace\\b)|(?P<T_NAMESPACE_SEPARATOR>\\/)|(?P<T_EXTENDS>extends\\b)|(?P<T_IMPLEMENTS>implements\\b)|(?P<T_ON>on\\b)|(?P<T_TYPE>type\\b)|(?P<T_ENUM>enum\\b)|(?P<T_UNION>union\\b)|(?P<T_INPUT_UNION>inputUnion\\b)|(?P<T_INTERFACE>interface\\b)|(?P<T_SCHEMA>schema\\b)|(?P<T_SCALAR>scalar\\b)|(?P<T_DIRECTIVE>directive\\b)|(?P<T_INPUT>input\\b)|(?P<T_EXTEND>extend\\b)|(?P<T_FRAGMENT>fragment\\b)|(?P<T_VARIABLE>\\$[_A-Za-z][_0-9A-Za-z]*)|(?P<T_NAME>[_A-Za-z][_0-9A-Za-z]*)|(?P<T_WHITESPACE>(\\xfe\\xff|\\x20|\\x09|\\x0a|\\x0d)+)|(?P<T_COMMENT>#[^\\n]*)|(?P<T_COMMA>,)|(?P<T_UNKNOWN>.*?)/usS', ['T_WHITESPACE','T_COMMENT','T_COMMA',]), [
                            0 =>
new \Railt\Compiler\Parser\Rule\Repetition(0, 0, -1, ['DocumentImports',], null),
                            1 =>
new \Railt\Compiler\Parser\Rule\Repetition(1, 0, -1, ['DocumentDefinitions',], null),
                            'Document' =>
new \Railt\Compiler\Parser\Rule\Concatenation('Document', [0,1,], '#Document'),
                            'DocumentImports' =>
new \Railt\Compiler\Parser\Rule\Concatenation('DocumentImports', ['Directive',], null),
                            'DocumentDefinitions' =>
new \Railt\Compiler\Parser\Rule\Alternation('DocumentDefinitions', ['Extension','Definition',], null),
                            'NameWithoutReserved' =>
new \Railt\Compiler\Parser\Rule\Token('NameWithoutReserved', 'T_NAME', true),
                            6 =>
new \Railt\Compiler\Parser\Rule\Token(6, 'T_TRUE', true),
                            7 =>
new \Railt\Compiler\Parser\Rule\Token(7, 'T_FALSE', true),
                            8 =>
new \Railt\Compiler\Parser\Rule\Token(8, 'T_NULL', true),
                            9 =>
new \Railt\Compiler\Parser\Rule\Alternation(9, ['NameExceptValues',6,7,8,], null),
                            'NameWithReserved' =>
new \Railt\Compiler\Parser\Rule\Concatenation('NameWithReserved', [9,], '#Name'),
                            11 =>
new \Railt\Compiler\Parser\Rule\Token(11, 'T_NAMESPACE', true),
                            12 =>
new \Railt\Compiler\Parser\Rule\Token(12, 'T_EXTENDS', true),
                            13 =>
new \Railt\Compiler\Parser\Rule\Token(13, 'T_IMPLEMENTS', true),
                            14 =>
new \Railt\Compiler\Parser\Rule\Token(14, 'T_ON', true),
                            15 =>
new \Railt\Compiler\Parser\Rule\Token(15, 'T_TYPE', true),
                            16 =>
new \Railt\Compiler\Parser\Rule\Token(16, 'T_ENUM', true),
                            17 =>
new \Railt\Compiler\Parser\Rule\Token(17, 'T_UNION', true),
                            18 =>
new \Railt\Compiler\Parser\Rule\Token(18, 'T_INPUT_UNION', true),
                            19 =>
new \Railt\Compiler\Parser\Rule\Token(19, 'T_INTERFACE', true),
                            20 =>
new \Railt\Compiler\Parser\Rule\Token(20, 'T_SCHEMA', true),
                            21 =>
new \Railt\Compiler\Parser\Rule\Token(21, 'T_SCALAR', true),
                            22 =>
new \Railt\Compiler\Parser\Rule\Token(22, 'T_DIRECTIVE', true),
                            23 =>
new \Railt\Compiler\Parser\Rule\Token(23, 'T_INPUT', true),
                            24 =>
new \Railt\Compiler\Parser\Rule\Token(24, 'T_EXTEND', true),
                            25 =>
new \Railt\Compiler\Parser\Rule\Token(25, 'T_FRAGMENT', true),
                            'NameExceptValues' =>
new \Railt\Compiler\Parser\Rule\Alternation('NameExceptValues', ['NameWithoutReserved',11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,], null),
                            27 =>
new \Railt\Compiler\Parser\Rule\Token(27, 'T_VARIABLE', true),
                            'Variable' =>
new \Railt\Compiler\Parser\Rule\Concatenation('Variable', [27,], '#Variable'),
                            'TypeName' =>
new \Railt\Compiler\Parser\Rule\Concatenation('TypeName', ['TypeNamespace','NameWithReserved',], '#TypeName'),
                            30 =>
new \Railt\Compiler\Parser\Rule\Token(30, 'T_FALSE', true),
                            31 =>
new \Railt\Compiler\Parser\Rule\Concatenation(31, [30,], '#Boolean'),
                            32 =>
new \Railt\Compiler\Parser\Rule\Token(32, 'T_TRUE', true),
                            33 =>
new \Railt\Compiler\Parser\Rule\Concatenation(33, [32,], '#Boolean'),
                            'Boolean' =>
new \Railt\Compiler\Parser\Rule\Alternation('Boolean', [31,33,], null),
                            35 =>
new \Railt\Compiler\Parser\Rule\Token(35, 'T_NUMBER', true),
                            'Number' =>
new \Railt\Compiler\Parser\Rule\Concatenation('Number', [35,], '#Number'),
                            37 =>
new \Railt\Compiler\Parser\Rule\Token(37, 'T_BLOCK_STRING', true),
                            38 =>
new \Railt\Compiler\Parser\Rule\Concatenation(38, [37,], '#String'),
                            39 =>
new \Railt\Compiler\Parser\Rule\Token(39, 'T_STRING', true),
                            40 =>
new \Railt\Compiler\Parser\Rule\Concatenation(40, [39,], '#String'),
                            'String' =>
new \Railt\Compiler\Parser\Rule\Alternation('String', [38,40,], null),
                            42 =>
new \Railt\Compiler\Parser\Rule\Token(42, 'T_NULL', true),
                            'Null' =>
new \Railt\Compiler\Parser\Rule\Concatenation('Null', [42,], '#Null'),
                            44 =>
new \Railt\Compiler\Parser\Rule\Token(44, 'T_BRACE_OPEN', false),
                            45 =>
new \Railt\Compiler\Parser\Rule\Repetition(45, 0, -1, ['__inputPair',], null),
                            46 =>
new \Railt\Compiler\Parser\Rule\Token(46, 'T_BRACE_CLOSE', false),
                            'Input' =>
new \Railt\Compiler\Parser\Rule\Concatenation('Input', [44,45,46,], '#Input'),
                            48 =>
new \Railt\Compiler\Parser\Rule\Token(48, 'T_COLON', false),
                            '__inputPair' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__inputPair', ['NameWithReserved',48,'Value',], '#Pair'),
                            50 =>
new \Railt\Compiler\Parser\Rule\Token(50, 'T_BRACKET_OPEN', false),
                            51 =>
new \Railt\Compiler\Parser\Rule\Repetition(51, 0, -1, ['Value',], null),
                            52 =>
new \Railt\Compiler\Parser\Rule\Token(52, 'T_BRACKET_CLOSE', false),
                            'List' =>
new \Railt\Compiler\Parser\Rule\Concatenation('List', [50,51,52,], '#List'),
                            54 =>
new \Railt\Compiler\Parser\Rule\Concatenation(54, ['NameWithReserved',], '#Value'),
                            55 =>
new \Railt\Compiler\Parser\Rule\Concatenation(55, ['Boolean',], '#Value'),
                            56 =>
new \Railt\Compiler\Parser\Rule\Concatenation(56, ['Number',], '#Value'),
                            57 =>
new \Railt\Compiler\Parser\Rule\Concatenation(57, ['String',], '#Value'),
                            58 =>
new \Railt\Compiler\Parser\Rule\Concatenation(58, ['Input',], '#Value'),
                            59 =>
new \Railt\Compiler\Parser\Rule\Concatenation(59, ['Null',], '#Value'),
                            60 =>
new \Railt\Compiler\Parser\Rule\Concatenation(60, ['List',], '#Value'),
                            'Value' =>
new \Railt\Compiler\Parser\Rule\Alternation('Value', [54,55,56,57,58,59,60,], null),
                            'Documentation' =>
new \Railt\Compiler\Parser\Rule\Concatenation('Documentation', ['String',], '#Description'),
                            63 =>
new \Railt\Compiler\Parser\Rule\Concatenation(63, ['__returnListDefinition',], '#ReturnTypeDefinition'),
                            64 =>
new \Railt\Compiler\Parser\Rule\Concatenation(64, ['__returnTypeDefinition',], '#ReturnTypeDefinition'),
                            'ReturnTypeDefinition' =>
new \Railt\Compiler\Parser\Rule\Alternation('ReturnTypeDefinition', [63,64,], null),
                            66 =>
new \Railt\Compiler\Parser\Rule\Token(66, 'T_NON_NULL', true),
                            '__returnTypeNonNullModifier' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__returnTypeNonNullModifier', [66,], '#NonNull'),
                            68 =>
new \Railt\Compiler\Parser\Rule\Token(68, 'T_BRACKET_OPEN', false),
                            69 =>
new \Railt\Compiler\Parser\Rule\Token(69, 'T_BRACKET_CLOSE', false),
                            70 =>
new \Railt\Compiler\Parser\Rule\Repetition(70, 0, 1, ['__returnTypeNonNullModifier',], null),
                            '__returnListDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__returnListDefinition', [68,'__returnTypeDefinition',69,70,], '#List'),
                            72 =>
new \Railt\Compiler\Parser\Rule\Repetition(72, 0, 1, ['__returnTypeDefinitionArguments',], null),
                            73 =>
new \Railt\Compiler\Parser\Rule\Concatenation(73, ['TypeName',72,], null),
                            74 =>
new \Railt\Compiler\Parser\Rule\Alternation(74, [73,'Variable',], null),
                            75 =>
new \Railt\Compiler\Parser\Rule\Repetition(75, 0, 1, ['__returnTypeNonNullModifier',], null),
                            '__returnTypeDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__returnTypeDefinition', [74,75,], '#Type'),
                            77 =>
new \Railt\Compiler\Parser\Rule\Token(77, 'T_PARENTHESIS_OPEN', false),
                            78 =>
new \Railt\Compiler\Parser\Rule\Repetition(78, 0, -1, ['ArgumentDefinition',], null),
                            79 =>
new \Railt\Compiler\Parser\Rule\Token(79, 'T_PARENTHESIS_CLOSE', false),
                            '__returnTypeDefinitionArguments' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__returnTypeDefinitionArguments', [77,78,79,], '#TypeArguments'),
                            81 =>
new \Railt\Compiler\Parser\Rule\Token(81, 'T_IMPLEMENTS', false),
                            82 =>
new \Railt\Compiler\Parser\Rule\Token(82, 'T_AND', false),
                            83 =>
new \Railt\Compiler\Parser\Rule\Concatenation(83, [82,'TypeName',], null),
                            84 =>
new \Railt\Compiler\Parser\Rule\Repetition(84, 0, -1, [83,], null),
                            'TypeDefinitionImplements' =>
new \Railt\Compiler\Parser\Rule\Concatenation('TypeDefinitionImplements', [81,'TypeName',84,], '#Implements'),
                            86 =>
new \Railt\Compiler\Parser\Rule\Token(86, 'T_PARENTHESIS_OPEN', false),
                            87 =>
new \Railt\Compiler\Parser\Rule\Repetition(87, 0, -1, ['__genericArgumentDefinition',], null),
                            88 =>
new \Railt\Compiler\Parser\Rule\Token(88, 'T_PARENTHESIS_CLOSE', false),
                            'GenericArgumentsDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('GenericArgumentsDefinition', [86,87,88,], null),
                            90 =>
new \Railt\Compiler\Parser\Rule\Token(90, 'T_COLON', false),
                            '__genericArgumentDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__genericArgumentDefinition', ['Variable',90,'TypeName',], '#GenericArgument'),
                            92 =>
new \Railt\Compiler\Parser\Rule\Repetition(92, 0, 1, ['Documentation',], null),
                            93 =>
new \Railt\Compiler\Parser\Rule\Token(93, 'T_COLON', false),
                            94 =>
new \Railt\Compiler\Parser\Rule\Repetition(94, 0, 1, ['__argumentDefinitionDefaultValue',], null),
                            'ArgumentDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('ArgumentDefinition', [92,'NameWithReserved',93,'ReturnTypeDefinition',94,], '#ArgumentDefinition'),
                            96 =>
new \Railt\Compiler\Parser\Rule\Token(96, 'T_EQUAL', false),
                            '__argumentDefinitionDefaultValue' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__argumentDefinitionDefaultValue', [96,'Value',], null),
                            98 =>
new \Railt\Compiler\Parser\Rule\Repetition(98, 0, 1, ['Documentation',], null),
                            99 =>
new \Railt\Compiler\Parser\Rule\Repetition(99, 0, 1, ['__fieldDefinitionArguments',], null),
                            100 =>
new \Railt\Compiler\Parser\Rule\Token(100, 'T_COLON', false),
                            101 =>
new \Railt\Compiler\Parser\Rule\Repetition(101, 0, -1, ['Directive',], null),
                            'FieldDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('FieldDefinition', [98,'NameWithReserved',99,100,'ReturnTypeDefinition',101,], '#FieldDefinition'),
                            103 =>
new \Railt\Compiler\Parser\Rule\Token(103, 'T_PARENTHESIS_OPEN', false),
                            104 =>
new \Railt\Compiler\Parser\Rule\Repetition(104, 0, -1, ['__fieldDefinitionArgument',], null),
                            105 =>
new \Railt\Compiler\Parser\Rule\Token(105, 'T_PARENTHESIS_CLOSE', false),
                            '__fieldDefinitionArguments' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__fieldDefinitionArguments', [103,104,105,], null),
                            107 =>
new \Railt\Compiler\Parser\Rule\Repetition(107, 0, -1, ['Directive',], null),
                            '__fieldDefinitionArgument' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__fieldDefinitionArgument', ['ArgumentDefinition',107,], null),
                            109 =>
new \Railt\Compiler\Parser\Rule\Repetition(109, 0, 1, ['Documentation',], null),
                            'DirectiveDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('DirectiveDefinition', [109,'DirectiveDefinitionBody',], '#DirectiveDefinition'),
                            111 =>
new \Railt\Compiler\Parser\Rule\Token(111, 'T_DIRECTIVE', false),
                            112 =>
new \Railt\Compiler\Parser\Rule\Token(112, 'T_DIRECTIVE_AT', false),
                            113 =>
new \Railt\Compiler\Parser\Rule\Repetition(113, 0, 1, ['__directiveDefinitionArguments',], null),
                            114 =>
new \Railt\Compiler\Parser\Rule\Token(114, 'T_ON', false),
                            'DirectiveDefinitionBody' =>
new \Railt\Compiler\Parser\Rule\Concatenation('DirectiveDefinitionBody', [111,112,'TypeName',113,114,'__directiveDefinitionLocations',], null),
                            116 =>
new \Railt\Compiler\Parser\Rule\Token(116, 'T_PARENTHESIS_OPEN', false),
                            117 =>
new \Railt\Compiler\Parser\Rule\Repetition(117, 0, -1, ['__directiveDefinitionArgument',], null),
                            118 =>
new \Railt\Compiler\Parser\Rule\Token(118, 'T_PARENTHESIS_CLOSE', false),
                            '__directiveDefinitionArguments' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__directiveDefinitionArguments', [116,117,118,], null),
                            '__directiveDefinitionArgument' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__directiveDefinitionArgument', ['ArgumentDefinition',], '#DirectiveArgument'),
                            121 =>
new \Railt\Compiler\Parser\Rule\Token(121, 'T_OR', false),
                            122 =>
new \Railt\Compiler\Parser\Rule\Repetition(122, 0, 1, [121,], null),
                            123 =>
new \Railt\Compiler\Parser\Rule\Repetition(123, 1, -1, ['__directiveDefinitionLocation',], null),
                            '__directiveDefinitionLocations' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__directiveDefinitionLocations', [122,123,], '#DirectiveLocations'),
                            125 =>
new \Railt\Compiler\Parser\Rule\Token(125, 'T_OR', false),
                            126 =>
new \Railt\Compiler\Parser\Rule\Concatenation(126, [125,'NameWithReserved',], null),
                            127 =>
new \Railt\Compiler\Parser\Rule\Repetition(127, 0, -1, [126,], null),
                            '__directiveDefinitionLocation' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__directiveDefinitionLocation', ['NameWithReserved',127,], null),
                            129 =>
new \Railt\Compiler\Parser\Rule\Repetition(129, 0, 1, ['Documentation',], null),
                            'EnumDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('EnumDefinition', [129,'EnumDefinitionHead','EnumDefinitionBody',], '#EnumDefinition'),
                            131 =>
new \Railt\Compiler\Parser\Rule\Token(131, 'T_ENUM', false),
                            132 =>
new \Railt\Compiler\Parser\Rule\Repetition(132, 0, -1, ['Directive',], null),
                            'EnumDefinitionHead' =>
new \Railt\Compiler\Parser\Rule\Concatenation('EnumDefinitionHead', [131,'TypeName',132,], null),
                            134 =>
new \Railt\Compiler\Parser\Rule\Token(134, 'T_BRACE_OPEN', false),
                            135 =>
new \Railt\Compiler\Parser\Rule\Repetition(135, 1, -1, ['__enumDefinitionValue',], null),
                            136 =>
new \Railt\Compiler\Parser\Rule\Token(136, 'T_BRACE_CLOSE', false),
                            'EnumDefinitionBody' =>
new \Railt\Compiler\Parser\Rule\Concatenation('EnumDefinitionBody', [134,135,136,], null),
                            138 =>
new \Railt\Compiler\Parser\Rule\Repetition(138, 0, 1, ['Documentation',], null),
                            139 =>
new \Railt\Compiler\Parser\Rule\Repetition(139, 0, -1, ['Directive',], null),
                            '__enumDefinitionValue' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__enumDefinitionValue', [138,'NameExceptValues',139,], '#EnumValue'),
                            141 =>
new \Railt\Compiler\Parser\Rule\Repetition(141, 0, 1, ['Documentation',], null),
                            'InputDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('InputDefinition', [141,'InputDefinitionHead','InputDefinitionBody',], '#InputDefinition'),
                            143 =>
new \Railt\Compiler\Parser\Rule\Token(143, 'T_INPUT', false),
                            144 =>
new \Railt\Compiler\Parser\Rule\Repetition(144, 0, -1, ['Directive',], null),
                            'InputDefinitionHead' =>
new \Railt\Compiler\Parser\Rule\Concatenation('InputDefinitionHead', [143,'TypeName',144,], null),
                            146 =>
new \Railt\Compiler\Parser\Rule\Token(146, 'T_BRACE_OPEN', false),
                            147 =>
new \Railt\Compiler\Parser\Rule\Repetition(147, 0, -1, ['__inputDefinitionField',], null),
                            148 =>
new \Railt\Compiler\Parser\Rule\Token(148, 'T_BRACE_CLOSE', false),
                            'InputDefinitionBody' =>
new \Railt\Compiler\Parser\Rule\Concatenation('InputDefinitionBody', [146,147,148,], null),
                            150 =>
new \Railt\Compiler\Parser\Rule\Repetition(150, 0, -1, ['Directive',], null),
                            '__inputDefinitionField' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__inputDefinitionField', ['ArgumentDefinition',150,], '#InputField'),
                            152 =>
new \Railt\Compiler\Parser\Rule\Repetition(152, 0, 1, ['Documentation',], null),
                            'InterfaceDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('InterfaceDefinition', [152,'InterfaceDefinitionHead','InterfaceDefinitionBody',], '#InterfaceDefinition'),
                            154 =>
new \Railt\Compiler\Parser\Rule\Token(154, 'T_INTERFACE', false),
                            155 =>
new \Railt\Compiler\Parser\Rule\Repetition(155, 0, 1, ['GenericArgumentsDefinition',], null),
                            156 =>
new \Railt\Compiler\Parser\Rule\Repetition(156, 0, 1, ['TypeDefinitionImplements',], null),
                            157 =>
new \Railt\Compiler\Parser\Rule\Repetition(157, 0, -1, ['Directive',], null),
                            'InterfaceDefinitionHead' =>
new \Railt\Compiler\Parser\Rule\Concatenation('InterfaceDefinitionHead', [154,'TypeName',155,156,157,], null),
                            159 =>
new \Railt\Compiler\Parser\Rule\Token(159, 'T_BRACE_OPEN', false),
                            160 =>
new \Railt\Compiler\Parser\Rule\Repetition(160, 0, -1, ['FieldDefinition',], null),
                            161 =>
new \Railt\Compiler\Parser\Rule\Token(161, 'T_BRACE_CLOSE', false),
                            'InterfaceDefinitionBody' =>
new \Railt\Compiler\Parser\Rule\Concatenation('InterfaceDefinitionBody', [159,160,161,], null),
                            163 =>
new \Railt\Compiler\Parser\Rule\Repetition(163, 0, 1, ['NamespaceDefinitionBody',], null),
                            'NamespaceDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('NamespaceDefinition', ['NamespaceDefinitionHead',163,], '#NamespaceDefinition'),
                            165 =>
new \Railt\Compiler\Parser\Rule\Token(165, 'T_NAMESPACE', false),
                            166 =>
new \Railt\Compiler\Parser\Rule\Alternation(166, ['TypeName','GlobalNamespace',], null),
                            167 =>
new \Railt\Compiler\Parser\Rule\Repetition(167, 0, 1, [166,], null),
                            168 =>
new \Railt\Compiler\Parser\Rule\Repetition(168, 0, -1, ['DocumentImports',], null),
                            'NamespaceDefinitionHead' =>
new \Railt\Compiler\Parser\Rule\Concatenation('NamespaceDefinitionHead', [165,167,168,], null),
                            170 =>
new \Railt\Compiler\Parser\Rule\Token(170, 'T_BRACE_OPEN', false),
                            171 =>
new \Railt\Compiler\Parser\Rule\Repetition(171, 0, -1, ['DocumentImports',], null),
                            172 =>
new \Railt\Compiler\Parser\Rule\Repetition(172, 0, -1, ['Definition',], null),
                            173 =>
new \Railt\Compiler\Parser\Rule\Token(173, 'T_BRACE_CLOSE', false),
                            'NamespaceDefinitionBody' =>
new \Railt\Compiler\Parser\Rule\Concatenation('NamespaceDefinitionBody', [170,171,172,173,], '#ChildrenDefinitions'),
                            175 =>
new \Railt\Compiler\Parser\Rule\Repetition(175, 0, 1, ['GlobalNamespace',], null),
                            176 =>
new \Railt\Compiler\Parser\Rule\Token(176, 'T_NAMESPACE_SEPARATOR', false),
                            177 =>
new \Railt\Compiler\Parser\Rule\Concatenation(177, ['NameWithReserved',176,], null),
                            178 =>
new \Railt\Compiler\Parser\Rule\Repetition(178, 0, -1, [177,], null),
                            'TypeNamespace' =>
new \Railt\Compiler\Parser\Rule\Concatenation('TypeNamespace', [175,178,], null),
                            180 =>
new \Railt\Compiler\Parser\Rule\Token(180, 'T_NAMESPACE_SEPARATOR', false),
                            'GlobalNamespace' =>
new \Railt\Compiler\Parser\Rule\Concatenation('GlobalNamespace', [180,], '#GlobalNamespace'),
                            182 =>
new \Railt\Compiler\Parser\Rule\Repetition(182, 0, 1, ['Documentation',], null),
                            'ObjectDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('ObjectDefinition', [182,'ObjectDefinitionHead','ObjectDefinitionBody',], '#ObjectDefinition'),
                            184 =>
new \Railt\Compiler\Parser\Rule\Token(184, 'T_TYPE', false),
                            185 =>
new \Railt\Compiler\Parser\Rule\Repetition(185, 0, 1, ['GenericArgumentsDefinition',], null),
                            186 =>
new \Railt\Compiler\Parser\Rule\Repetition(186, 0, 1, ['TypeDefinitionImplements',], null),
                            187 =>
new \Railt\Compiler\Parser\Rule\Repetition(187, 0, -1, ['Directive',], null),
                            'ObjectDefinitionHead' =>
new \Railt\Compiler\Parser\Rule\Concatenation('ObjectDefinitionHead', [184,'TypeName',185,186,187,], null),
                            189 =>
new \Railt\Compiler\Parser\Rule\Token(189, 'T_BRACE_OPEN', false),
                            190 =>
new \Railt\Compiler\Parser\Rule\Repetition(190, 0, -1, ['FieldDefinition',], null),
                            191 =>
new \Railt\Compiler\Parser\Rule\Repetition(191, 0, 1, ['__definitions',], null),
                            192 =>
new \Railt\Compiler\Parser\Rule\Token(192, 'T_BRACE_CLOSE', false),
                            'ObjectDefinitionBody' =>
new \Railt\Compiler\Parser\Rule\Concatenation('ObjectDefinitionBody', [189,190,191,192,], null),
                            194 =>
new \Railt\Compiler\Parser\Rule\Repetition(194, 1, -1, ['Definition',], null),
                            '__definitions' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__definitions', [194,], '#ChildrenDefinitions'),
                            196 =>
new \Railt\Compiler\Parser\Rule\Repetition(196, 0, 1, ['Documentation',], null),
                            'ScalarDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('ScalarDefinition', [196,'ScalarDefinitionBody',], '#ScalarDefinition'),
                            198 =>
new \Railt\Compiler\Parser\Rule\Token(198, 'T_SCALAR', false),
                            199 =>
new \Railt\Compiler\Parser\Rule\Repetition(199, 0, 1, ['__scalarExtends',], null),
                            200 =>
new \Railt\Compiler\Parser\Rule\Repetition(200, 0, -1, ['Directive',], null),
                            'ScalarDefinitionBody' =>
new \Railt\Compiler\Parser\Rule\Concatenation('ScalarDefinitionBody', [198,'TypeName',199,200,], null),
                            202 =>
new \Railt\Compiler\Parser\Rule\Token(202, 'T_EXTENDS', false),
                            '__scalarExtends' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__scalarExtends', [202,'TypeName',], '#Extends'),
                            204 =>
new \Railt\Compiler\Parser\Rule\Repetition(204, 0, 1, ['Documentation',], null),
                            'SchemaDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('SchemaDefinition', [204,'SchemaDefinitionBody',], '#SchemaDefinition'),
                            206 =>
new \Railt\Compiler\Parser\Rule\Token(206, 'T_SCHEMA', false),
                            207 =>
new \Railt\Compiler\Parser\Rule\Repetition(207, 0, 1, ['TypeName',], null),
                            208 =>
new \Railt\Compiler\Parser\Rule\Token(208, 'T_BRACE_OPEN', false),
                            209 =>
new \Railt\Compiler\Parser\Rule\Repetition(209, 0, -1, ['__schemaField',], null),
                            210 =>
new \Railt\Compiler\Parser\Rule\Token(210, 'T_BRACE_CLOSE', false),
                            'SchemaDefinitionBody' =>
new \Railt\Compiler\Parser\Rule\Concatenation('SchemaDefinitionBody', [206,207,208,209,210,], null),
                            212 =>
new \Railt\Compiler\Parser\Rule\Token(212, 'T_COLON', false),
                            '__schemaField' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__schemaField', ['NameWithReserved',212,'TypeName',], '#SchemaField'),
                            214 =>
new \Railt\Compiler\Parser\Rule\Repetition(214, 0, 1, ['Documentation',], null),
                            'UnionDefinition' =>
new \Railt\Compiler\Parser\Rule\Concatenation('UnionDefinition', [214,'UnionDefinitionBody',], '#UnionDefinition'),
                            216 =>
new \Railt\Compiler\Parser\Rule\Token(216, 'T_UNION', false),
                            217 =>
new \Railt\Compiler\Parser\Rule\Repetition(217, 0, -1, ['Directive',], null),
                            218 =>
new \Railt\Compiler\Parser\Rule\Token(218, 'T_EQUAL', false),
                            219 =>
new \Railt\Compiler\Parser\Rule\Token(219, 'T_OR', false),
                            220 =>
new \Railt\Compiler\Parser\Rule\Repetition(220, 0, 1, [219,], null),
                            221 =>
new \Railt\Compiler\Parser\Rule\Repetition(221, 1, -1, ['__unionDefinitionTargets',], null),
                            'UnionDefinitionBody' =>
new \Railt\Compiler\Parser\Rule\Concatenation('UnionDefinitionBody', [216,'TypeName',217,218,220,221,], null),
                            223 =>
new \Railt\Compiler\Parser\Rule\Token(223, 'T_OR', false),
                            224 =>
new \Railt\Compiler\Parser\Rule\Concatenation(224, [223,'TypeName',], null),
                            225 =>
new \Railt\Compiler\Parser\Rule\Repetition(225, 0, -1, [224,], null),
                            '__unionDefinitionTargets' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__unionDefinitionTargets', ['TypeName',225,], null),
                            'Definition' =>
new \Railt\Compiler\Parser\Rule\Alternation('Definition', ['DirectiveDefinition','EnumDefinition','InputDefinition','InterfaceDefinition','NamespaceDefinition','ObjectDefinition','ScalarDefinition','SchemaDefinition','UnionDefinition',], null),
                            228 =>
new \Railt\Compiler\Parser\Rule\Token(228, 'T_EXTEND', false),
                            'EnumExtension' =>
new \Railt\Compiler\Parser\Rule\Concatenation('EnumExtension', [228,'__enumExtensionVariants',], '#EnumExtension'),
                            230 =>
new \Railt\Compiler\Parser\Rule\Concatenation(230, ['EnumDefinitionHead','EnumDefinitionBody',], null),
                            '__enumExtensionVariants' =>
new \Railt\Compiler\Parser\Rule\Alternation('__enumExtensionVariants', ['EnumDefinitionHead',230,], null),
                            232 =>
new \Railt\Compiler\Parser\Rule\Token(232, 'T_EXTEND', false),
                            'InputExtension' =>
new \Railt\Compiler\Parser\Rule\Concatenation('InputExtension', [232,'__inputExtensionVariants',], '#InputExtension'),
                            234 =>
new \Railt\Compiler\Parser\Rule\Concatenation(234, ['InputDefinitionHead','InputDefinitionBody',], null),
                            '__inputExtensionVariants' =>
new \Railt\Compiler\Parser\Rule\Alternation('__inputExtensionVariants', ['InputDefinitionHead',234,], null),
                            236 =>
new \Railt\Compiler\Parser\Rule\Token(236, 'T_EXTEND', false),
                            'InterfaceExtension' =>
new \Railt\Compiler\Parser\Rule\Concatenation('InterfaceExtension', [236,'__interfaceExtensionVariants',], '#InterfaceExtension'),
                            238 =>
new \Railt\Compiler\Parser\Rule\Concatenation(238, ['InterfaceDefinitionHead','InterfaceDefinitionBody',], null),
                            '__interfaceExtensionVariants' =>
new \Railt\Compiler\Parser\Rule\Alternation('__interfaceExtensionVariants', ['InterfaceDefinitionHead',238,], null),
                            240 =>
new \Railt\Compiler\Parser\Rule\Token(240, 'T_EXTEND', false),
                            'ObjectExtension' =>
new \Railt\Compiler\Parser\Rule\Concatenation('ObjectExtension', [240,'__objectExtensionVariants',], '#ObjectExtension'),
                            242 =>
new \Railt\Compiler\Parser\Rule\Concatenation(242, ['ObjectDefinitionHead','ObjectDefinitionBody',], null),
                            '__objectExtensionVariants' =>
new \Railt\Compiler\Parser\Rule\Alternation('__objectExtensionVariants', ['ObjectDefinitionHead',242,], null),
                            244 =>
new \Railt\Compiler\Parser\Rule\Token(244, 'T_EXTEND', false),
                            'ScalarExtension' =>
new \Railt\Compiler\Parser\Rule\Concatenation('ScalarExtension', [244,'ScalarDefinitionBody',], '#ScalarExtension'),
                            246 =>
new \Railt\Compiler\Parser\Rule\Token(246, 'T_EXTEND', false),
                            'SchemaExtension' =>
new \Railt\Compiler\Parser\Rule\Concatenation('SchemaExtension', [246,'SchemaDefinitionBody',], '#SchemaExtension'),
                            248 =>
new \Railt\Compiler\Parser\Rule\Token(248, 'T_EXTEND', false),
                            'UnionExtension' =>
new \Railt\Compiler\Parser\Rule\Concatenation('UnionExtension', [248,'UnionDefinitionBody',], '#UnionExtension'),
                            'Extension' =>
new \Railt\Compiler\Parser\Rule\Alternation('Extension', ['EnumExtension','InputExtension','InterfaceExtension','ObjectExtension','ScalarExtension','SchemaExtension','UnionExtension',], null),
                            251 =>
new \Railt\Compiler\Parser\Rule\Token(251, 'T_COLON', false),
                            'ArgumentInvocation' =>
new \Railt\Compiler\Parser\Rule\Concatenation('ArgumentInvocation', ['NameWithReserved',251,'Value',], null),
                            253 =>
new \Railt\Compiler\Parser\Rule\Token(253, 'T_DIRECTIVE_AT', false),
                            254 =>
new \Railt\Compiler\Parser\Rule\Repetition(254, 0, 1, ['__directiveInvocationArguments',], null),
                            'Directive' =>
new \Railt\Compiler\Parser\Rule\Concatenation('Directive', [253,'TypeName',254,], '#Directive'),
                            256 =>
new \Railt\Compiler\Parser\Rule\Token(256, 'T_PARENTHESIS_OPEN', false),
                            257 =>
new \Railt\Compiler\Parser\Rule\Repetition(257, 0, -1, ['__directiveInvocationArgument',], null),
                            258 =>
new \Railt\Compiler\Parser\Rule\Token(258, 'T_PARENTHESIS_CLOSE', false),
                            '__directiveInvocationArguments' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__directiveInvocationArguments', [256,257,258,], null),
                            '__directiveInvocationArgument' =>
new \Railt\Compiler\Parser\Rule\Concatenation('__directiveInvocationArgument', ['ArgumentInvocation',], '#DirectiveArgument'),
                            'Invocation' =>
new \Railt\Compiler\Parser\Rule\Concatenation('Invocation', ['Directive',], null),
                    ]);
    }

    /**
     * @return string Returns the lexer compilation date and time in RFC3339 format
     */
    public function getBuiltDate(): string
    {
        return '2018-05-15MSK22:32:33.189+03:00';
    }
}
